<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
autoReload="true"
throwExceptions="false"
internalLogLevel="Warn" 
internalLogFile="c:\temp\nlog-internal.log">

	<variable name="logErrorFormat" value="${longdate} | ${level} | ${message} | ${exception:format=tostring} | ${newline}${fullstacktrace}${newline}${all-event-properties}"/>
	<variable name="logFolderPath" value="${logpath}/logs/" />
	<variable name="archivesLogFolderPath" value="${logFolderPath}archives/" />
	  
	<targets>
		<target type="UnityConsoleLogTarget" name="UnityConsole" layout="[${uppercase:${level}}] ${message}" />
		<target type="ServerConsoleTarget" name="ServerConsole" layout="${date:format=HH\:mm\:ss.ffff} [${uppercase:${level}}] ${message}" />
		<target type="ServerConsoleTarget" name="MinServerConsole" layout="${message}" />
		<target type="ConsoleCommandsTarget" name="ConsoleCommands" layout="${message}" />
		<target type="MainMenuTarget" name="MainMenu" layout="${message}" />	
	</targets>
	
	<targets>
		<default-target-parameters xsi:type="File"
		layout="${longdate}|${level}|${message}${newline}"
		concurrentWrites="false"
		openFileCacheTimeout="30"	
		keepFileOpen="true"
		maxArchiveFiles="20"
		archiveAboveSize="10000000"
		archiveNumbering="Sequence"
		archiveOldFileOnStartup="true"
		/>

		<default-wrapper xsi:type="AsyncWrapper"
		queueLimit="10000"
		timeToSleepBetweenBatches="0"
		batchSize="200"
		overflowAction="Grow"/>
					
		<!-- <target xsi:type="File" name="logFile"  -->
		<!-- fileName="${logFolderPath}unity-log.txt" -->
		<!-- archiveFileName="${archivesLogFolderPath}/unity-log-{###}.txt"/> -->
		
		<!-- <target xsi:type="File" name="unhandledLogFile"  -->
		<!-- fileName="${logFolderPath}unity-unhandled-log.txt"  -->
		<!-- archiveFileName="${archivesLogFolderPath}unity-unhandled-log-{###}.txt" -->
		<!-- layout="${logErrorFormat}"/> -->
		
		<!-- <target xsi:type="File" name="errorLogFile"  -->
		<!-- fileName="${logFolderPath}unity-error-log.txt"  -->
		<!-- archiveFileName="${archivesLogFolderPath}unity-error-log-{###}.txt" -->
		<!-- layout="${logErrorFormat}"/>	 -->

		<target xsi:type="File" name="logFile" 
		fileName="${logFolderPath}unity-log.csv"
		archiveFileName="${archivesLogFolderPath}/unity-log-{###}.csv">
			<layout xsi:type="CsvLayout" delimiter="Comma" quoting="All">
				<column name="time" layout="${longdate}" />
				<column name="level" layout="${level}"/>
				<column name="logger" layout="${logger}"/>
				<column name="message" layout="${message}" />
			</layout>		
		</target>
		
		<target xsi:type="File" name="errorLogFile" 
		fileName="${logFolderPath}unity-error-log.csv" 
		archiveFileName="${archivesLogFolderPath}unity-error-log-{###}.csv">	
			<layout xsi:type="CsvLayout" delimiter="Comma" quoting="All">
				<column name="time" layout="${longdate}" />
				<column name="level" layout="${level}"/>
				<column name="logger" layout="${logger}"/>
				<column name="message" layout="${message}" />
				<column name="stacktrace" layout="${fullstacktrace}" />
				<column name="exception.type" layout="${exception:format=type}"/>
				<column name="exception.message" layout="${exception:format=message}" />
				<column name="exception.stacktrace" layout="${exception:format=stacktrace}" />
			</layout>		
		</target>
		
		<target xsi:type="File" name="unhandledLogFile" 
		fileName="${logFolderPath}unity-unhandled-log.csv" 
		archiveFileName="${archivesLogFolderPath}unity-unhandled-log-{###}.csv">
			<layout xsi:type="CsvLayout" delimiter="Comma" quoting="All">
				<column name="time" layout="${longdate}" />
				<column name="level" layout="${level}"/>
				<column name="logger" layout="${logger}"/>
				<column name="message" layout="${message}" />
				<column name="stacktrace" layout="${fullstacktrace}" />
				<column name="exception.type" layout="${exception:format=type}"/>
				<column name="exception.message" layout="${exception:format=message}" />
				<column name="exception.stacktrace" layout="${exception:format=stacktrace}" />
			</layout>		
		</target>
	</targets>   

  <rules>
	<!-- Enabling Trace in builds is VERY expensive -->
	<!--<logger name="*" level="Trace" writeTo="UnityConsole" final="true"/>-->
	<logger name="Alta.Console.*" level="Trace" writeTo="MinServerConsole,ConsoleCommands" final="true"/>
    <logger name="*" minlevel="Debug" writeTo="logFile,ServerConsole" />
    <logger name="*" minlevel="Error" writeTo="errorLogFile" />
	<!--<logger name="Alta.Networking.Servers.*" minLevel="Debug" writeTo="MainMenu"/>
	<logger name="JoinServerPipeline" minLevel="Debug" writeTo="MainMenu"/>-->
	<logger name="Unhandled" writeTo="unhandledLogFile" />
  </rules>
</nlog>

<!--							
----------------------------------------------------------------------
Level	Example
----------------------------------------------------------------------
Fatal	Highest level: important stuff down
Error	For example application crashes / exceptions.
Warn	Incorrect behavior but the application can continue
Info	Normal behavior like mail sent, user updated profile etc.
Debug	Executed queries, user authenticated, session expired
Trace	Begin method X, end method X etc
----------------------------------------------------------------------					
-->
